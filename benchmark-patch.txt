diff -uprN benchmark/build.sh benchmark-patched/build.sh
--- benchmark/build.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/build.sh	2017-03-09 11:32:08.952899251 +0900
@@ -0,0 +1,88 @@
+#!/usr/bin/env bash
+#set -x
+SCRIPTDIR="$(cd "`dirname "$0"`"; pwd)"
+source ${SCRIPTDIR}/env.sh
+
+UTILSDIR=${SCRIPTDIR}/utils
+SRCDIR=${SCRIPTDIR}/single-source
+
+
+
+#
+# Flags for codegen
+#
+SWIFTC_FLAGS="-g"
+#SWIFTC_FLAGS="${SWIFTC_FLAGS} -O"
+SWIFTC_FLAGS="${SWIFTC_FLAGS} -Ounchecked"
+SWIFTC_FLAGS="${SWIFTC_FLAGS} -whole-module-optimization"
+# Note: generate single-threaded code
+#SWIFTC_FLAGS="${SWIFTC_FLAGS} -Xfrontend -assume-single-threaded"
+
+
+
+#
+# Flags for Foundation
+#
+unset SWIFTC_FOUNDATION_FLAGS
+if [[ -n "${MY_SWIFT_BUILD_FOUNDATION}" ]]; then
+    SWIFTC_FOUNDATION_FLAGS="-I ${MY_SWIFT_BUILD_FOUNDATION} -I ${MY_SWIFT_BUILD_FOUNDATION}/usr/lib/swift -L ${MY_SWIFT_BUILD_FOUNDATION} -lFoundation"
+fi
+
+
+
+#
+# Flags for application modules
+#
+[[ -d "${MODULEDIR}" ]] || mkdir -p ${MODULEDIR}
+unset SWIFTC_MODULES
+
+
+
+#
+# Building utils module
+#
+pushd ${MODULEDIR} > /dev/null
+for f in ${UTILSDIR}/TestsUtils.swift; do
+#    echo $f
+    modulename=$(basename $f .swift)
+    echo $modulename
+    swiftc ${SWIFTC_FLAGS} -emit-module -module-name $modulename -emit-library $f
+    SWIFTC_MODULES="-l$modulename${SWIFTC_MODULES:+ }${SWIFTC_MODULES}"
+done
+for f in ${UTILSDIR}/DriverUtils.swift; do
+#    echo $f
+    modulename=$(basename $f .swift)
+    echo $modulename
+    swiftc ${SWIFTC_FLAGS} ${SWIFTC_FOUNDATION_FLAGS} -emit-module -module-name $modulename -emit-library $f ${UTILSDIR}/ArgParse.swift
+    SWIFTC_MODULES="-l$modulename${SWIFTC_MODULES:+ }${SWIFTC_MODULES}"
+done
+popd > /dev/null
+
+
+
+#
+# Building single-source module
+#
+pushd ${MODULEDIR} > /dev/null
+for f in ${SRCDIR}/*.swift; do
+#    echo $f
+    modulename=$(basename $f .swift)
+    echo $modulename
+    if [[ ( "$modulename" != "ProtocolDispatch") ]]; then
+        OPTIONAL_SOURCES="${UTILSDIR}/TestsUtils.swift"
+    else
+        unset OPTIONAL_SOURCES
+    fi
+    swiftc ${SWIFTC_FLAGS} -I ${MODULEDIR} ${SWIFTC_FOUNDATION_FLAGS} -emit-module -module-name $modulename -emit-library $f ${OPTIONAL_SOURCES}
+    [[ $? -eq 0 ]] && SWIFTC_MODULES="-l$modulename${SWIFTC_MODULES:+ }${SWIFTC_MODULES}"
+done
+popd > /dev/null
+
+
+
+#
+# Building application
+#
+SWIFTC_MODULES_FLAGS="-I ${MODULEDIR} -L ${MODULEDIR} ${SWIFTC_MODULES}"
+OPTIONAL_SOURCES="${UTILSDIR}/TestsUtils.swift ${UTILSDIR}/DriverUtils.swift ${UTILSDIR}/ArgParse.swift"
+swiftc ${SWIFTC_FLAGS} ${SWIFTC_MODULES_FLAGS} ${SWIFTC_FOUNDATION_FLAGS} -o ${SCRIPTDIR}/main ${UTILSDIR}/main.swift ${OPTIONAL_SOURCES}
diff -uprN benchmark/clean.sh benchmark-patched/clean.sh
--- benchmark/clean.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/clean.sh	2017-03-09 11:29:05.336894627 +0900
@@ -0,0 +1,5 @@
+#!/usr/bin/env bash
+SCRIPTDIR="$(cd "`dirname "$0"`"; pwd)"
+MODULEDIR=${SCRIPTDIR}/bin
+
+rm -rf ${SCRIPTDIR}/main ${MODULEDIR}
diff -uprN benchmark/env.sh benchmark-patched/env.sh
--- benchmark/env.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/env.sh	2017-03-09 11:29:05.336894627 +0900
@@ -0,0 +1,28 @@
+MODULEDIR=${SCRIPTDIR}/bin
+
+
+if [[ -z "${MY_SWIFT_BUILD_FOUNDATION}" ]]; then
+    UNAME="$(uname)"
+    if [[ "${UNAME}" == "Darwin" ]]; then
+        MY_SWIFT_OS="macosx"
+    elif [[ "${UNAME}" == "Linux" ]]; then
+        MY_SWIFT_OS="linux"
+    else
+        MY_SWIFT_OS="unknown"
+    fi
+    dir="$(dirname "$(which swift)")/../../foundation-${MY_SWIFT_OS}-x86_64/Foundation"
+    [[ -d "${dir}" ]] && export MY_SWIFT_BUILD_FOUNDATION="$(cd "${dir}"; pwd)"
+    unset dir
+    #echo $MY_SWIFT_BUILD_FOUNDATION
+fi
+
+
+export LD_LIBRARY_PATH=${MODULEDIR}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}
+if [[ -n "${MY_SWIFT_BUILD_FOUNDATION}" ]]; then
+    export LD_LIBRARY_PATH=${MY_SWIFT_BUILD_FOUNDATION}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}
+fi
+
+
+# NOTE: (compiler) generate single-threaded code
+# NOTE: (native runtime) use non-atomic refcounts for single-threaded code
+#export SWIFT_ASSUME_SINGLE_THREADED=1
diff -uprN benchmark/list.sh benchmark-patched/list.sh
--- benchmark/list.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/list.sh	2017-03-09 11:29:05.336894627 +0900
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+SCRIPTDIR="$(cd "`dirname "$0"`"; pwd)"
+
+${SCRIPTDIR}/run.sh --list | sed -n -e 's/^    \(.*\)$/\1/p'
diff -uprN benchmark/run-operf.sh benchmark-patched/run-operf.sh
--- benchmark/run-operf.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/run-operf.sh	2017-03-09 11:29:05.336894627 +0900
@@ -0,0 +1,68 @@
+#!/usr/bin/env bash
+SCRIPTDIR="$(cd "`dirname "$0"`"; pwd)"
+TIMESTAMP="$(date +%Y%m%d_%H%M%S)"
+LOGDIR="${SCRIPTDIR}/.logs"
+[[ -d "${LOGDIR}" ]] || mkdir -p "${LOGDIR}"
+
+CMD="$(basename "$0")"
+
+source ${SCRIPTDIR}/env.sh
+
+OPERF_FLAGS="--events CPU_CLK_UNHALTED:500000 --vmlinux /usr/lib/debug/boot/vmlinux-$(uname -r)"
+# For callgraph
+#OPERF_FLAGS="${OPERF_FLAGS} --callgraph"
+APP_FLAGS="--iter-scale=10"
+TESTFILE=${SCRIPTDIR}/list.txt
+SLEEP_SECONDS=1
+
+
+RESULTSDIR=${SCRIPTDIR}/operf-results
+[[ -d "${RESULTSDIR}" ]] || mkdir -p "${RESULTSDIR}"
+
+
+#POST_ONLY=1
+
+
+pushd ${RESULTSDIR} > /dev/null
+
+echo "Started benchmarking with operf at $(date)" | tee -a "${LOGDIR}/${CMD}-${TIMESTAMP}.log"
+
+while read TEST
+do
+
+    DIR="oprofile_data-${TEST}"
+    [[ -d "${DIR}" ]] || mkdir -p "${DIR}"
+    OPERF_DIR="--session-dir ${DIR}"
+    OPREPORT_DIR="--session-dir=${DIR}"
+
+    if [[ -z "${POST_ONLY}" ]]; then
+        #
+        # run with profiling
+        #
+        cmd="operf ${OPERF_FLAGS} ${OPERF_DIR} ${SCRIPTDIR}/main --run-all ${APP_FLAGS} ${TEST}"
+        echo $cmd | tee -a "${LOGDIR}/${CMD}-${TIMESTAMP}.log"
+        eval $cmd 2>&1 | tee -a "${LOGDIR}/${CMD}-${TIMESTAMP}.log"
+    fi
+
+    #
+    # post process
+    #
+    opreport -l ${OPREPORT_DIR} 2>&1 | tee "opreport-l-${TEST}.txt-raw" | swift-demangle > "opreport-l-${TEST}.txt"
+# For callgraph
+#    opreport -cl ${OPREPORT_DIR} 2>&1 | tee "opreport-cl-${TEST}.txt-raw" | swift-demangle > "opreport-cl-${TEST}.txt"
+    opannotate -s ${OPREPORT_DIR} 2>&1 | tee "opannotate-s-${TEST}.txt-raw" | swift-demangle > "opannotate-s-${TEST}.txt"
+    opannotate -a ${OPREPORT_DIR} 2>&1 | tee "opannotate-a-${TEST}.txt-raw" | swift-demangle > "opannotate-a-${TEST}.txt"
+
+    if [[ -z "${POST_ONLY}" ]]; then
+        #
+        # sleep after run
+        #
+        echo "Sleeping ${SLEEP_SECONDS} seconds" | tee -a "${LOGDIR}/${CMD}-${TIMESTAMP}.log"
+        sleep ${SLEEP_SECONDS}
+    fi
+
+done < ${TESTFILE}
+
+echo "Finished benchmarking with operf at $(date)" | tee -a "${LOGDIR}/${CMD}-${TIMESTAMP}.log"
+
+popd > /dev/null
diff -uprN benchmark/run.sh benchmark-patched/run.sh
--- benchmark/run.sh	1970-01-01 09:00:00.000000000 +0900
+++ benchmark-patched/run.sh	2017-03-09 11:29:05.336894627 +0900
@@ -0,0 +1,8 @@
+#!/usr/bin/env bash
+SCRIPTDIR="$(cd "`dirname "$0"`"; pwd)"
+source ${SCRIPTDIR}/env.sh
+
+
+cmd="${SCRIPTDIR}/main $*"
+echo $cmd
+eval $cmd
