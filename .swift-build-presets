# ~/.swift-build-presets

#
# For Mac, incremental
#

[preset: buildbot_incremental_my]
# Note: same as buildbot_incremental except for building only for osx
mixin-preset=buildbot_incremental_base

build-subdir=buildbot_incremental

# Build Release without debug info, because it is faster to build.
release
assertions

# Build llbuild & swiftpm here
llbuild
swiftpm

# Build Playground support
# Note: skip playground support for now
#playgroundlogger
#playgroundsupport

dash-dash

# Only run OS X tests to make the build cycle faster.
# We still build the iOS standard library though -- it is free given the
# parallelism.
skip-test-ios
skip-test-tvos
skip-test-watchos


#
# For Linux, incremental
#

[preset: buildbot_incremental_linux_base_my]
assertions
release
#### WIP temporarily disable test
####test
####validation-test
lit-args=-v

dash-dash

build-ninja
reconfigure


# Note: As of 2016.11.28, incremental build on Linux cannot be used for compiling swift programs which import Foundation (that requires Dispatch).
#[preset: buildbot_incremental_linux_my]
[preset: DISABLE_FOR_NOW]
mixin-preset=buildbot_incremental_linux_base_my
build-subdir=buildbot_incremental

llbuild
swiftpm
xctest
foundation
libdispatch
dash-dash


#
# For Linux, install
#

[preset: mixin_linux_installation_my]
# Note: needed only for slightly old our internal codebase where lldb doesn't compile
mixin-preset=mixin_lightweight_assertions

llbuild
swiftpm
xctest
dash-dash

build-ninja
install-swift
install-lldb
install-llbuild
install-swiftpm
install-xctest
install-prefix=/usr
swift-install-components=autolink-driver;compiler;clang-builtin-headers;stdlib;swift-remote-mirror;sdk-overlay;license;sourcekit-inproc
build-swift-static-stdlib
build-swift-static-sdk-overlay
build-swift-stdlib-unittest-extra

# Executes the lit tests for the installable package that is created
# Assumes the swift-integration-tests repo is checked out
#### WIP temporarily disable test
####test-installable-package

# Path to the root of the installation filesystem.
install-destdir=%(install_destdir)s

# Path to the .tar.gz package we would create.
installable-package=%(installable_package)s


[preset: buildbot_linux_my]
mixin-preset=mixin_linux_installation_my
build-subdir=buildbot_linux
lldb
release
#### WIP temporarily disable test
####test
####validation-test
####long-test
foundation
libdispatch
lit-args=-v

dash-dash

# rdar://problem/31454823
skip-test-lldb

install-foundation
install-libdispatch
reconfigure


[preset: buildbot_linux_nonatomic_my]
mixin-preset=mixin_linux_installation_my
build-subdir=buildbot_linux
lldb
release
#### WIP temporarily disable test
####test
####validation-test
####long-test
foundation
libdispatch
lit-args=-v

dash-dash

# rdar://problem/31454823
skip-test-lldb

install-foundation
install-libdispatch
reconfigure

# Enable non-atomic build of the stdlib
swift-stdlib-use-nonatomic-rc=true
